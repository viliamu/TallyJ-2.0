@using TallyJ.Code.Enumerations
@using TallyJ.Code.Resources
@using TallyJ.Code.Session
@model IBallotModel
@{
  ViewBag.Title = "Ballots";
  ViewBag.Message = "Tally the votes for a single position";

  ContextItems.AddJavascriptForPage("pageUrl", "ballotSinglePage.controllerUrl={0};".FilledWith(Url.Action("Index").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("peopleUrl", "ballotSinglePage.peopleUrl={0};".FilledWith(@Url.Action("Index", "People").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("invalids", "ballotSinglePage.invalidReasons={0};".FilledWith(IneligibleReasonEnum.InvalidReasonsJsonString()));
  ContextItems.AddJavascriptForPage("ballot", "ballotSinglePage.BallotInfo={0};".FilledWith(Model.CurrentBallotInfo().SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("location", "ballotSinglePage.Location={0};".FilledWith(ContextItems.LocationModel.CurrentBallotLocationJsonString()));
  //  ContextItems.AddJavascriptForPage("locationSingle?", "ballotSinglePage.HasLocations={0};".FilledWith(ContextItems.LocationModel.HasLocations.SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballots", "ballotSinglePage.Ballots={0};".FilledWith(Model.CurrentBallotsInfoList().SerializedAsJsonString()));
  TemplateLoader.RequireTemplates(TemplateLoader.File.SingleVoteLine);
}
<script src="@ClientFile("~/Scripts/PeopleHelper.js")" type="text/javascript"></script>
<div class="PullInstructions">
  <ol>
    <li>
      In this election, each paper ballot consists of a single name. Sort ballot slips
      into piles, one per person receiving a vote, including piles for spoiled votes.
    </li>
    <li>
      For each pile, select the person's name below then enter the number of votes they
      received.
    </li>
    <li>
      Update the Status input to indicate the status of your counting process, and the
      Contact Info if it is not correct.
    </li>
  </ol>
</div>
<div class="float-left div1">
  <div id="tabs" class="tabs">
    <ul>
      <li><a href="#tabBallots" id="tabBallotTitle">Ballot Groups</a></li>
      <li><a href="#tabNameSearch">Add another person</a></li>
    </ul>

    <div id="tabBallots" class="locationInfo">
      <h5>Ballot Groups <span class="ui-icon ui-icon-info" id="qTipBallotGroups"></span></h5>
      <div id="ballotList" class="ballotList">
      </div>
    </div>

    <div id="tabNameSearch">
      <div class="float-right addSpoiled">
        <span class="ui-icon ui-icon-info float-right Clear" id="qTipSpoiled"></span>
        <button id="btnAddSpoiled" type="button" tabindex="2" accesskey="A" class="btn btn-mini spoiledBtn float-right">
          <u>A</u>dd new or spoiled
        </button>
      </div>
      <div class="float-left">
        <div>
          Search for a <u>p</u>erson:
        </div>
        <div class="float-left" id="searchInput">
          <span id="keyTimeShow"></span>
          <input id="txtSearch" accesskey="P" tabindex="1" autocomplete="off" class="input-medium">
        </div>
      </div>
      <div class="actionHolder Clear">
        <div class="tip1">
          Use &uarr; &darr; to move in the list. Press Enter when found.
        </div>
      </div>
      <ul id="nameList" class="nameList"></ul>
      <div class="Clear5">
      </div>
    </div>
  </div>
</div>
<div id="votesPanel" class="votesPanel">
  <div class="divLocationInfo">
    <table class="locationInfo">
      @if (ContextItems.LocationModel.HasLocations)
      {
        <tr>
          <td>
            This Location:
          </td>
          <td>
            "<b><span data-name="Name"></span></b>"
          </td>
        </tr>
        <tr>
          <td>
            <span>Location Status:</span>
          </td>
          <td>
            <select id="ddlLocationStatus" data-name="TallyStatusCode" tabindex="3">
              @LocationStatusEnum.ForHtmlSelect(UserSession.CurrentLocation.TallyStatus)
            </select>
          </td>
        </tr>
      }
      <tr>
        <td>Ballots To Enter:</td>
        <td>
          <input id="txtNumCollected" type="number" data-name="BallotsCollected" />
          <span>Entered so far:</span>
          <span id="numEntered" data-name="BallotsEntered"></span>
          <b>
            <span id="collectedVsEntered"></span>
          </b>
          @*<button type="button" id="btnRefreshBallotCount">
            Refresh</button>*@
        </td>
      </tr>
      @if (ContextItems.LocationModel.HasLocations)
      {
        <tr>
          <td>
            <span>Contact Info:</span>
          </td>
          <td>
            <input id="txtContact" maxlength="250" data-name="ContactInfo" tabindex="3">
          </td>
        </tr>
      }
    </table>
  </div>
  <div class="titleDiv">
    <span># Votes<span class="ui-icon ui-icon-info" id="qTipNumVotes"></span></span>
    &nbsp; Name of person <span class="NotBold">(in any order)</span>
  </div>
  <div id="votesList">
  </div>
</div>
<div id="addMissingPanel" class="votesPanel">
  <h3>
    Add Missing Person
  </h3>
  @{ Html.RenderPartial("~/Views/Setup/EditPerson.cshtml", new SetupModel()); }
  <button id="btnCancelAddMissing" type="button" class="btn btn-warning">
    Cancel
  </button>
</div>
